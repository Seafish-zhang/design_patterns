/**
 * Description: 结构型模式(Structural Pattern)描述如何将类或者对 象结合在一起形成更大的结构，就像搭积木，可以通过 简单积木的组合形成复杂的、功能更为强大的结构。
 * <p>
 * 代理、桥接、装饰、适配器4种设计模式的区别
 * <p>
 * 这四种模式是比较常用的结构型设计模式。它们的代码结构非常类似，都是通过Wrapper类二次封装原始类。
 * <p>
 * 但是4种设计模式的用意完全不同，要解决的问题和应用场景不同
 * <p>
 * 代理模式是在不改变原始类接口的条件下，为原始类定义一个代理类，主要目的是控制访问，而非加强功能这是它跟装饰模式最大的不同.
 * <p>
 * 桥接模式的目的是将接口部分和实现部分分离，从而让它们可以较为容易、相对独立地加以改变.
 * <p>
 * 装饰模式是在不改变原始类接口的条件下，为原始类功能进行增强，并且支持多个装饰器的嵌套使用.
 * <p>
 * 适配器模式是一种事后补救策略，适配器提供跟原始类不同的接口，而代理模式，装饰模式提供的都是跟原始类相同的接口.
 *
 * @author zhy
 * @date 2020/5/25
 */
package com.colin.structural;